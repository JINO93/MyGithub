plugins {
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
import com.jino.version.plugin.*

android {
    compileSdkVersion BuildConfig.compileSdkVersion

    defaultConfig {
        applicationId "com.jino.mygithub"
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "CLIENT_ID", properties.getProperty("CLIENT_ID")
        buildConfigField "String", "CLIENT_SECRET", properties.getProperty("CLIENT_SECRET")
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // kotlin
    implementation Kt.stdlibJdk8

    // Androidx
    implementation AndroidX.coreKtx
    implementation AndroidX.appcompat
    implementation AndroidX.lifeCycle_Common
    implementation AndroidX.material
    implementation AndroidX.constraintlayout
    implementation AndroidX.recyclerview
    implementation AndroidX.pagingRuntime
    implementation (AndroidX.swiperefreshlayout){
        exclude group: "androidx.core" , "module":"core"
    }
    implementation (AndroidX.activityKtx){
        exclude group: "androidx.core" , "module":"core"
    }
    implementation Fragment.runtimeKtx

    // Retrofit
    implementation Retrofit.runtime
    implementation Retrofit.gson
    implementation Retrofit.runtime
    implementation Retrofit.logging_interceptor

    // Glide
    implementation Glide.glide
    kapt Glide.glide_compiler

    // Hilt
    implementation Hilt.hilt_Android
//    implementation Hilt.hilt_lifecycle_viewmodel
    kapt Hilt.hilt_compiler
    androidTestImplementation Hilt.hilt_testing
    kaptAndroidTest Hilt.hilt_android_compiler

    // jsoup
    implementation Depend.jsoup

    // test
    testImplementation Depend.junit
    androidTestImplementation Depend.androidTestJunit
    androidTestImplementation Depend.espressoCore

    androidTestImplementation Fragment.testing
    testImplementation AndroidX.pagingTest
}

kapt {
    correctErrorTypes true
}